LibreTranslate is an open-source, lightweight, and self-hosted machine translation tool that allows users to translate text between multiple languages. Unlike many other translation services, it doesn’t rely on proprietary APIs or external servers, giving users complete control over their data. LibreTranslate supports a variety of languages and can be integrated into applications or websites via its easy-to-use API. Its open-source nature and flexibility make it a popular choice for developers, researchers, and anyone looking for a customizable translation solution that can run locally or on private infrastructure. LibreTranslate uses Argos Translate, an open-source neural machine translation engine, to perform translations.

In this article, I walk through how to install LibreTranslate on Linux Mint (Ubuntu) and enable translation in OpenWebUI for LLM model response translations.

First you need to select installation path and install Python virtual environment (Python 3.8+) and then install cmake:

sudo mkdir /opt/libre
sudo chown youruser:yourgroup /opt/libre
cd /opt/libre
python3 -m venv venv
source venv/bin/activate

sudo apt-get install cmake

Make sure your virtual environment is enabled. Then execute installation:

pip install libretranslate

Wait for the installation to complete:

Successfully built sentencepiece
Installing collected packages: sentencepiece, pytz, polib, mpmath, morfessor, lexilang, expiringdict, commonmark, appdirs, wrapt, waitress, urllib3, tzlocal, typing-extensions, tqdm, sympy, soupsieve, six, setuptools, regex, PyYAML, pygments, protobuf, prometheus-client, packaging, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, numpy, networkx, MarkupSafe, lxml, joblib, itsdangerous, importlib-resources, idna, fsspec, filelock, click, charset-normalizer, certifi, cachelib, Babel, async-timeout, werkzeug, triton, sacremoses, rich, requests, nvidia-cusparse-cu12, nvidia-cudnn-cu12, langdetect, Jinja2, deprecated, ctranslate2, beautifulsoup4, apscheduler, redis, nvidia-cusolver-cu12, limits, flask, torch, flask-swagger-ui, flask-swagger, flask-session, flask-limiter, flask-babel, stanza, argostranslate, translatehtml, argos-translate-files, libretranslate
Successfully installed Babel-2.16.0 Jinja2-3.1.4 MarkupSafe-3.0.1 PyYAML-6.0.2 appdirs-1.4.4 apscheduler-3.9.1 argos-translate-files-1.1.4 argostranslate-1.9.1 async-timeout-4.0.3 beautifulsoup4-4.9.3 cachelib-0.13.0 certifi-2024.8.30 charset-normalizer-2.1.1 click-8.1.7 commonmark-0.9.1 ctranslate2-3.20.0 deprecated-1.2.14 expiringdict-1.2.2 filelock-3.16.1 flask-2.2.2 flask-babel-3.1.0 flask-limiter-2.6.3 flask-session-0.4.0 flask-swagger-0.2.14 flask-swagger-ui-4.11.1 fsspec-2024.9.0 idna-3.10 importlib-resources-6.4.5 itsdangerous-2.1.2 joblib-1.4.2 langdetect-1.0.9 lexilang-1.0.1 libretranslate-1.5.1 limits-3.13.0 lxml-5.3.0 morfessor-2.0.6 mpmath-1.3.0 networkx-3.4 numpy-2.1.2 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.6.77 nvidia-nvtx-cu12-12.1.105 packaging-23.1 polib-1.1.1 prometheus-client-0.15.0 protobuf-5.28.2 pygments-2.18.0 pytz-2024.2 redis-4.3.4 regex-2024.9.11 requests-2.28.1 rich-12.6.0 sacremoses-0.0.53 sentencepiece-0.1.99 setuptools-75.1.0 six-1.16.0 soupsieve-2.6 stanza-1.1.1 sympy-1.13.3 torch-2.4.1 tqdm-4.66.5 translatehtml-1.5.2 triton-3.0.0 typing-extensions-4.12.2 tzlocal-5.2 urllib3-1.26.20 waitress-2.1.2 werkzeug-2.2.2 wrapt-1.16.0

If you like to have all languages installed, then run libretranslate without arguments:

libretranslate

Updating language models
Found 92 models
Downloading Albanian → English (1.9) ...
Downloading Arabic → English (1.0) ...
Downloading Azerbaijani → English (1.5) ...
Downloading Basque → English (1.9) ...
Downloading Bengali → English (1.9) ...
Downloading Bulgarian → English (1.9) ...
Downloading Catalan → English (1.7) ...
Downloading Chinese (traditional) → English (1.9) ...
Downloading Chinese → English (1.9) ...
Downloading Czech → English (1.9) ...
Downloading Danish → English (1.3) ...
Downloading Dutch → English (1.8) ...
Downloading English → Albanian (1.9) ...
Downloading English → Arabic (1.0) ...
Downloading English → Azerbaijani (1.5) ...
Downloading English → Basque (1.9) ...
Downloading English → Bengali (1.9) ...
Downloading English → Bulgarian (1.9) ...
Downloading English → Catalan (1.9) ...
Downloading English → Chinese (1.9) ...
Downloading English → Chinese (traditional) (1.9) ...
Downloading English → Czech (1.9) ...
Downloading English → Danish (1.3) ...
Downloading English → Dutch (1.8) ...
Downloading English → Esperanto (1.5) ...
Downloading English → Estonian (1.9) ...
Downloading English → Finnish (1.5) ...
Downloading English → French (1.9) ...
Downloading English → Galician (1.9) ...
Downloading English → German (1.0) ...
Downloading English → Greek (1.9) ...
Downloading English → Hebrew (1.5) ...
Downloading English → Hindi (1.1) ...
Downloading English → Hungarian (1.5) ...
Downloading English → Indonesian (1.2) ...
Downloading English → Irish (1.1) ...
Downloading English → Italian (1.0) ...
Downloading English → Japanese (1.1) ...
Downloading English → Korean (1.1) ...
Downloading English → Latvian (1.9) ...
Downloading English → Lithuanian (1.9) ...
Downloading English → Malay (1.9) ...
Downloading English → Norwegian (1.9) ...
Downloading English → Persian (1.5) ...
Downloading English → Polish (1.9) ...
Downloading English → Portuguese (1.0) ...
Downloading English → Romanian (1.9) ...
Downloading English → Russian (1.9) ...
Downloading English → Slovak (1.5) ...
Downloading English → Slovenian (1.9) ...
Downloading English → Spanish (1.0) ...
Downloading English → Swedish (1.5) ...
Downloading English → Tagalog (1.9) ...
Downloading English → Thai (1.9) ...
Downloading English → Turkish (1.5) ...
Downloading English → Ukranian (1.4) ...
Downloading English → Urdu (1.9) ...
Downloading Esperanto → English (1.5) ...
Downloading Estonian → English (1.9) ...
Downloading Finnish → English (1.5) ...
Downloading French → English (1.9) ...
Downloading Galician → English (1.9) ...
Downloading German → English (1.0) ...
Downloading Greek → English (1.9) ...
Downloading Hebrew → English (1.5) ...
Downloading Hindi → English (1.1) ...
Downloading Hungarian → English (1.5) ...
Downloading Indonesian → English (1.2) ...
Downloading Irish → English (1.1) ...
Downloading Italian → English (1.0) ...
Downloading Japanese → English (1.1) ..
....
Loaded support for 46 languages (92 models total)!
Running on http://127.0.0.1:5000

As you can see, LibreTranslate is now running on localhost and listening on port 5000. Open your web browser and type localhost:5000. You should see the following page:
Libretranslate web page in your local computer

You can also use LibreTranslate for document translation. Be sure to select the correct ‘Translate from’ language for the file you upload to LibreTranslate. Once the translation is complete, it will be saved in your Downloads folder.
Translating file
OpenWebUI settings for libretranslate

First, download and install https://openwebui.com/f/iamg30/multilanguage_libretranslate_action/ Function.

Update the UserValues class (inheriting from BaseModel) to support your preferred languages. As an example, set the TARGET_LANGUAGES default value to ["fi"].

class UserValves(BaseModel):
        SOURCE_LANGUAGE: str = Field(
            default="auto",
            description="User-specific source language for assistant messages",
        )
        TARGET_LANGUAGES: list[str] = Field(
            default=["fi", "sv", "es"],
            description="User-specific target languages for assistant messages",
        )

Once installed, you should enable Function and then decide you you want it to be globally available for all models, or enable it model by model.
Enbablind LibreTranslate globally
Enabling LibreTranslate by model

If you use another port for the LibreTranslate backend, change the valve:

Now you can use button to translate responses to your defined languages:

Now, responses are translated into your chosen (or predefined) languages.

If you need to adjust the info label or add additional carriage returns (CR) to the response, consider modifying these lines within the function:

content = "\n\n".join(
            [
                f"\n ----- Translated to: {target} language ----- \n"
                + translate
                for target, translate in translations.items()
            ]
        )

Output will be like this:

    LLM response in supported language

    — — — Translated to: fi language — — —

    Text in Finnish language

All translations are processed locally on your computer, enhancing security.
Example startup script

#!/bin/bash
cd /opt/libre || exit
source venv/bin/activate
libretranslate

Updating Libretranslate

Procedure:

    Activate the venv
    execute command pip install — upgrade libretranslate

Updating translations

    Activate the venv
    execute command libretranslate — update_models

pip list after upgrades as of 21.01.2025:

Package                  Version
------------------------ ----------
appdirs                  1.4.4
APScheduler              3.9.1
argos-translate-files    1.2.0
argostranslate           1.9.6
async-timeout            4.0.3
babel                    2.16.0
beautifulsoup4           4.9.3
cachelib                 0.13.0
certifi                  2024.8.30
charset-normalizer       2.1.1
click                    8.1.7
commonmark               0.9.1
ctranslate2              4.5.0
Deprecated               1.2.14
emoji                    2.14.1
expiringdict             1.2.2
filelock                 3.16.1
Flask                    2.2.5
flask-babel              3.1.0
Flask-Limiter            2.6.3
Flask-Session            0.4.0
flask-swagger            0.2.14
flask-swagger-ui         4.11.1
fsspec                   2024.9.0
idna                     3.10
importlib_resources      6.4.5
itsdangerous             2.1.2
Jinja2                   3.1.4
joblib                   1.4.2
langdetect               1.0.9
LexiLang                 1.0.4
libretranslate           1.6.4
limits                   3.13.0
lxml                     5.3.0
MarkupSafe               3.0.1
Morfessor                2.0.6
mpmath                   1.3.0
networkx                 3.4
numpy                    1.26.4
nvidia-cublas-cu12       12.1.3.1
nvidia-cuda-cupti-cu12   12.1.105
nvidia-cuda-nvrtc-cu12   12.1.105
nvidia-cuda-runtime-cu12 12.1.105
nvidia-cudnn-cu12        8.9.2.26
nvidia-cufft-cu12        11.0.2.54
nvidia-curand-cu12       10.3.2.106
nvidia-cusolver-cu12     11.4.5.107
nvidia-cusparse-cu12     12.1.0.106
nvidia-nccl-cu12         2.19.3
nvidia-nvjitlink-cu12    12.6.77
nvidia-nvtx-cu12         12.1.105
packaging                23.1
pip                      24.0
polib                    1.1.1
prometheus-client        0.15.0
protobuf                 5.28.2
Pygments                 2.18.0
pytz                     2024.2
PyYAML                   6.0.2
redis                    4.4.4
regex                    2024.9.11
requests                 2.31.0
rich                     12.6.0
sacremoses               0.0.53
sentencepiece            0.2.0
setuptools               75.1.0
six                      1.16.0
soupsieve                2.6
stanza                   1.1.1
sympy                    1.13.3
torch                    2.2.0
tqdm                     4.66.5
translatehtml            1.5.2
triton                   2.2.0
typing_extensions        4.12.2
tzlocal                  5.2
urllib3                  1.26.20
waitress                 2.1.2
Werkzeug                 2.3.8
wrapt                    1.16.0
